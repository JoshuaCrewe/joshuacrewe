{"version":3,"sources":["vendor/_throttle.js","_lazyload.js"],"names":["undefined","FUNC_ERROR_TEXT","NAN","nullTag","symbolTag","undefinedTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","_typeof","Object","freeSelf","self","root","Function","freeExports","exports","nodeType","freeModule","module","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","Symbol","symToStringTag","toStringTag","nativeMax","Math","max","nativeMin","min","lodash","baseGetTag","value","isOwn","call","tag","unmasked","e","result","getRawTag","now","Date","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","timeWaiting","trailingEdge","setTimeout","debounced","isInvoking","arguments","this","toNumber","isObject","cancel","clearTimeout","flush","type","isObjectLike","isSymbol","other","valueOf","replace","isBinary","test","slice","throttle","VERSION","define","amd","_","lazy","setLazy","document","getElementsByClassName","lazyLoad","i","length","item","isInViewport","getAttribute","querySelector","img","createElement","setAttribute","appendChild","addEventListener","classList","add","el","rect","getBoundingClientRect","bottom","right","top","window","innerHeight","documentElement","clientHeight","left","innerWidth","clientWidth","registerListener","event","attachEvent","debounceLazyLoadFn"],"mappings":"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","file":"app.min.js","sourcesContent":["/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash include=\"throttle\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.5';\n\n  /** Error message constants. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as references for various `Number` constants. */\n  var NAN = 0 / 0;\n\n  /** `Object#toString` result references. */\n  var nullTag = '[object Null]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]';\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString = objectProto.toString;\n\n  /** Built-in value references. */\n  var Symbol = root.Symbol,\n      symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeMax = Math.max,\n      nativeMin = Math.min;\n\n  /** Used to lookup unminified function names. */\n  var realNames = {};\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array and iteratees accept only\n   * one argument. The heuristic for whether a section qualifies for shortcut\n   * fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n   * `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash() {\n    // No operation performed.\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  function baseGetTag(value) {\n    if (value == null) {\n      return value === undefined ? undefinedTag : nullTag;\n    }\n    return (symToStringTag && symToStringTag in Object(value))\n      ? getRawTag(value)\n      : objectToString(value);\n  }\n\n  /**\n   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the raw `toStringTag`.\n   */\n  function getRawTag(value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag),\n        tag = value[symToStringTag];\n\n    try {\n      value[symToStringTag] = undefined;\n      var unmasked = true;\n    } catch (e) {}\n\n    var result = nativeObjectToString.call(value);\n    if (unmasked) {\n      if (isOwn) {\n        value[symToStringTag] = tag;\n      } else {\n        delete value[symToStringTag];\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n  function objectToString(value) {\n    return nativeObjectToString.call(value);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Gets the timestamp of the number of milliseconds that have elapsed since\n   * the Unix epoch (1 January 1970 00:00:00 UTC).\n   *\n   * @static\n   * @memberOf _\n   * @since 2.4.0\n   * @category Date\n   * @returns {number} Returns the timestamp.\n   * @example\n   *\n   * _.defer(function(stamp) {\n   *   console.log(_.now() - stamp);\n   * }, _.now());\n   * // => Logs the number of milliseconds it took for the deferred invocation.\n   */\n  var now = function() {\n    return root.Date.now();\n  };\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a debounced function that delays invoking `func` until after `wait`\n   * milliseconds have elapsed since the last time the debounced function was\n   * invoked. The debounced function comes with a `cancel` method to cancel\n   * delayed `func` invocations and a `flush` method to immediately invoke them.\n   * Provide `options` to indicate whether `func` should be invoked on the\n   * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n   * with the last arguments provided to the debounced function. Subsequent\n   * calls to the debounced function return the result of the last `func`\n   * invocation.\n   *\n   * **Note:** If `leading` and `trailing` options are `true`, `func` is\n   * invoked on the trailing edge of the timeout only if the debounced function\n   * is invoked more than once during the `wait` timeout.\n   *\n   * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n   * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n   *\n   * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n   * for details over the differences between `_.debounce` and `_.throttle`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to debounce.\n   * @param {number} [wait=0] The number of milliseconds to delay.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.leading=false]\n   *  Specify invoking on the leading edge of the timeout.\n   * @param {number} [options.maxWait]\n   *  The maximum time `func` is allowed to be delayed before it's invoked.\n   * @param {boolean} [options.trailing=true]\n   *  Specify invoking on the trailing edge of the timeout.\n   * @returns {Function} Returns the new debounced function.\n   * @example\n   *\n   * // Avoid costly calculations while the window size is in flux.\n   * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n   *\n   * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n   * jQuery(element).on('click', _.debounce(sendMail, 300, {\n   *   'leading': true,\n   *   'trailing': false\n   * }));\n   *\n   * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n   * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n   * var source = new EventSource('/stream');\n   * jQuery(source).on('message', debounced);\n   *\n   * // Cancel the trailing debounced invocation.\n   * jQuery(window).on('popstate', debounced.cancel);\n   */\n  function debounce(func, wait, options) {\n    var lastArgs,\n        lastThis,\n        maxWait,\n        result,\n        timerId,\n        lastCallTime,\n        lastInvokeTime = 0,\n        leading = false,\n        maxing = false,\n        trailing = true;\n\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    wait = toNumber(wait) || 0;\n    if (isObject(options)) {\n      leading = !!options.leading;\n      maxing = 'maxWait' in options;\n      maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n      trailing = 'trailing' in options ? !!options.trailing : trailing;\n    }\n\n    function invokeFunc(time) {\n      var args = lastArgs,\n          thisArg = lastThis;\n\n      lastArgs = lastThis = undefined;\n      lastInvokeTime = time;\n      result = func.apply(thisArg, args);\n      return result;\n    }\n\n    function leadingEdge(time) {\n      // Reset any `maxWait` timer.\n      lastInvokeTime = time;\n      // Start the timer for the trailing edge.\n      timerId = setTimeout(timerExpired, wait);\n      // Invoke the leading edge.\n      return leading ? invokeFunc(time) : result;\n    }\n\n    function remainingWait(time) {\n      var timeSinceLastCall = time - lastCallTime,\n          timeSinceLastInvoke = time - lastInvokeTime,\n          timeWaiting = wait - timeSinceLastCall;\n\n      return maxing\n        ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n        : timeWaiting;\n    }\n\n    function shouldInvoke(time) {\n      var timeSinceLastCall = time - lastCallTime,\n          timeSinceLastInvoke = time - lastInvokeTime;\n\n      // Either this is the first call, activity has stopped and we're at the\n      // trailing edge, the system time has gone backwards and we're treating\n      // it as the trailing edge, or we've hit the `maxWait` limit.\n      return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n        (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n    }\n\n    function timerExpired() {\n      var time = now();\n      if (shouldInvoke(time)) {\n        return trailingEdge(time);\n      }\n      // Restart the timer.\n      timerId = setTimeout(timerExpired, remainingWait(time));\n    }\n\n    function trailingEdge(time) {\n      timerId = undefined;\n\n      // Only invoke if we have `lastArgs` which means `func` has been\n      // debounced at least once.\n      if (trailing && lastArgs) {\n        return invokeFunc(time);\n      }\n      lastArgs = lastThis = undefined;\n      return result;\n    }\n\n    function cancel() {\n      if (timerId !== undefined) {\n        clearTimeout(timerId);\n      }\n      lastInvokeTime = 0;\n      lastArgs = lastCallTime = lastThis = timerId = undefined;\n    }\n\n    function flush() {\n      return timerId === undefined ? result : trailingEdge(now());\n    }\n\n    function debounced() {\n      var time = now(),\n          isInvoking = shouldInvoke(time);\n\n      lastArgs = arguments;\n      lastThis = this;\n      lastCallTime = time;\n\n      if (isInvoking) {\n        if (timerId === undefined) {\n          return leadingEdge(lastCallTime);\n        }\n        if (maxing) {\n          // Handle invocations in a tight loop.\n          timerId = setTimeout(timerExpired, wait);\n          return invokeFunc(lastCallTime);\n        }\n      }\n      if (timerId === undefined) {\n        timerId = setTimeout(timerExpired, wait);\n      }\n      return result;\n    }\n    debounced.cancel = cancel;\n    debounced.flush = flush;\n    return debounced;\n  }\n\n  /**\n   * Creates a throttled function that only invokes `func` at most once per\n   * every `wait` milliseconds. The throttled function comes with a `cancel`\n   * method to cancel delayed `func` invocations and a `flush` method to\n   * immediately invoke them. Provide `options` to indicate whether `func`\n   * should be invoked on the leading and/or trailing edge of the `wait`\n   * timeout. The `func` is invoked with the last arguments provided to the\n   * throttled function. Subsequent calls to the throttled function return the\n   * result of the last `func` invocation.\n   *\n   * **Note:** If `leading` and `trailing` options are `true`, `func` is\n   * invoked on the trailing edge of the timeout only if the throttled function\n   * is invoked more than once during the `wait` timeout.\n   *\n   * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n   * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n   *\n   * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n   * for details over the differences between `_.throttle` and `_.debounce`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to throttle.\n   * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.leading=true]\n   *  Specify invoking on the leading edge of the timeout.\n   * @param {boolean} [options.trailing=true]\n   *  Specify invoking on the trailing edge of the timeout.\n   * @returns {Function} Returns the new throttled function.\n   * @example\n   *\n   * // Avoid excessively updating the position while scrolling.\n   * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n   *\n   * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n   * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n   * jQuery(element).on('click', throttled);\n   *\n   * // Cancel the trailing throttled invocation.\n   * jQuery(window).on('popstate', throttled.cancel);\n   */\n  function throttle(func, wait, options) {\n    var leading = true,\n        trailing = true;\n\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    if (isObject(options)) {\n      leading = 'leading' in options ? !!options.leading : leading;\n      trailing = 'trailing' in options ? !!options.trailing : trailing;\n    }\n    return debounce(func, wait, {\n      'leading': leading,\n      'maxWait': wait,\n      'trailing': trailing\n    });\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return value != null && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return value != null && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is classified as a `Symbol` primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n   * @example\n   *\n   * _.isSymbol(Symbol.iterator);\n   * // => true\n   *\n   * _.isSymbol('abc');\n   * // => false\n   */\n  function isSymbol(value) {\n    return typeof value == 'symbol' ||\n      (isObjectLike(value) && baseGetTag(value) == symbolTag);\n  }\n\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3.2);\n   * // => 3.2\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3.2');\n   * // => 3.2\n   */\n  function toNumber(value) {\n    if (typeof value == 'number') {\n      return value;\n    }\n    if (isSymbol(value)) {\n      return NAN;\n    }\n    if (isObject(value)) {\n      var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n      value = isObject(other) ? (other + '') : other;\n    }\n    if (typeof value != 'string') {\n      return value === 0 ? value : +value;\n    }\n    value = value.replace(reTrim, '');\n    var isBinary = reIsBinary.test(value);\n    return (isBinary || reIsOctal.test(value))\n      ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n      : (reIsBadHex.test(value) ? NAN : +value);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.debounce = debounce;\n  lodash.throttle = throttle;\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.isObject = isObject;\n  lodash.isObjectLike = isObjectLike;\n  lodash.isSymbol = isSymbol;\n  lodash.now = now;\n  lodash.toNumber = toNumber;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = lodash;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return lodash;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = lodash)._ = lodash;\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n  else {\n    // Export to the global object.\n    root._ = lodash;\n  }\n}.call(this));\n","var lazy = [];\n\nfunction setLazy(){\n    lazy = document.getElementsByClassName('lazy');\n    // console.log('Found ' + lazy.length + ' lazy images');\n} \n\nfunction lazyLoad(){\n\n    for(var i = 0; i < lazy.length; i++ ){\n\n        var item = lazy[i];\n\n        if( isInViewport( item ) ) {\n\n            if (item.getAttribute('data-src') && ! item.querySelector('.lazy-loaded')){\n                var img = document.createElement('img');\n                img.setAttribute('src', item.getAttribute('data-src'));\n                img.setAttribute('srcset', item.getAttribute('data-srcset'));\n                img.setAttribute('alt', item.getAttribute('data-alt'));\n                img.setAttribute('sizes', item.getAttribute('data-sizes'));\n                item.appendChild(img);\n\n                img.addEventListener(\"load\", function() {\n                    this.classList.add('lazy-loaded');\n                })\n\n            }\n\n        }\n    }\n    \n}\n\nfunction isInViewport(el){\n    var rect = el.getBoundingClientRect();\n    \n    return (\n        rect.bottom >= 0 && \n        rect.right >= 0 && \n        rect.top <= (window.innerHeight || document.documentElement.clientHeight) && \n        rect.left <= (window.innerWidth || document.documentElement.clientWidth)\n     );\n}\n\nfunction registerListener(event, func) {\n    if (window.addEventListener) {\n        window.addEventListener(event, func)\n    } else {\n        window.attachEvent('on' + event, func)\n    }\n}\n\n// If you want to debounce it for performance reasons then use this for the\n// event listener. This waits until the scroll finishes though.\nvar debounceLazyLoadFn = _.throttle(function(){\n    lazyLoad();\n}, 300);\n\nregisterListener('load', setLazy);\nregisterListener('load', lazyLoad);\nregisterListener('scroll', debounceLazyLoadFn);\nregisterListener('resize', lazyLoad);\n"]}